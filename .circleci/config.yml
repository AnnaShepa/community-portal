version: 1
jobs:
  build_frontend:
    working_directory: ~/community-portal/frontend

    docker:
      - image: circleci/node:10.3

    steps:
      - checkout: 
          path: ~/community-portal/

      - restore_cache:
          keys:
            - dependencies-cache-{{ checksum "./package.json" }}
            - dependencies-cache

      - run:
          name: Install dependencies
          command: npm install

      - run:
          name: run frontend tests
          command: npm test
          
      - save_cache:
          paths:
            - node_modules
          key: dependencies-cache-{{ checksum "./package.json" }}

      # Install AWS cli
      - run:
          name: Install aws cli
          command:
              sudo apt-get -y -qq install awscli    
      
      - run:
          name: deploy application
          command: |
            if [ "${CIRCLE_BRANCH}" == "staging" ]; then
              STAGE=qa npm run build:webpack
              aws s3 sync public/. s3://staging.opensource.engcom.magento.com --delete
            elif [ "${CIRCLE_BRANCH}" == "master" ]; then
              STAGE=production npm run build:webpack
              aws s3 sync public/. s3://staging.opensource.engcom.magento.com --delete
            else  
              STAGE=dev npm run build:webpack
              aws s3 sync public/. s3://dev.opensource.engcom.magento.com --delete
            fi

  build_functions:
    working_directory: ~/community-portal/functions

    docker:
      - image: circleci/node:10.3

    steps:
      - checkout:
          path: ~/community-portal/

      - restore_cache:
          keys:
            - dependencies-cache-{{ checksum "./package.json" }}
            - dependencies-cache

      - run:
          name: Install dependencies
          command: npm install

      - run:    
          name: Install Java
          command: 'sudo apt-get update && sudo apt-get install default-jre default-jdk'
      
      - run:
          name: Setup Local DynamoDB
          command: node_modules/.bin/sls dynamodb install 

      - run:
          name: Start Local DynamoDB      
          command: node_modules/.bin/sls offline start -r us-east-1
          background: true

      - run: sleep 20

      - run:
          name: run backend tests
          command: npm test

      - run:
          name: deploy application
          command: |
            if [ "${CIRCLE_BRANCH}" == "staging" ]; then
              node_modules/.bin/sls deploy --stage staging
            elif [ "${CIRCLE_BRANCH}" == "master" ]; then
              node_modules/.bin/sls deploy --stage prod
            else  
              node_modules/.bin/sls deploy --stage dev
            fi
          
      - save_cache:
          paths:
            - node_modules
          key: dependencies-cache-{{ checksum "./package.json" }}

workflows:
  version: 1
  build_and_deploy:
    jobs:
      - build_frontend
      - build_functions




